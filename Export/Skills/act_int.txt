-- Path of Building
--
-- Active Intelligence skill gems
-- Skill data (c) Grinding Gear Games
--
local skills, mod, flag, skill = ...

#skill Arc
#flags spell chaining lightning
#mods

#skill VaalArcChain
#flags spell lightning vaal
#mods

#skill ArcticBreath
#flags spell area projectile duration cold
#baseMod skill("radius", 12)
#mods

#skill AssassinsMark
#flags spell curse area duration
#baseMod skill("debuff", true)
#baseMod skill("radius", 22)
#mods

#skill BallLightning
#flags spell projectile lightning
#baseMod skill("radius", 20)
#mods

#skill Blight
#flags spell duration area chaos
#baseMod skill("debuff", true)
#baseMod skill("debuffSecondary", true)
#baseMod skill("radius", 26)
#mods

#skill CorpseWarp
#flags spell area fire movement
#baseMod skill("explodeCorpse", true, { type = "SkillPart", skillPart = 2 })
#setMod spell_minimum_base_fire_damage==skill("FireMin", nil, { type = "SkillPart", skillPart = 1 })
#setMod spell_maximum_base_fire_damage==skill("FireMax", nil, { type = "SkillPart", skillPart = 1 })
	parts = {
		{
			name = "Self Explosion",
			spell = true,
			cast = false,
		},
		{
			name = "Corpse Explosion",
			spell = false,
			cast =  true,
		},
	},
	setupFunc = function(actor, output)
		if actor.mainSkill.skillPart == 1 then
			local skillData = actor.mainSkill.skillData
			if actor.mainSkill.skillFlags.totem then
				skillData.FireBonusMin = output.TotemLife * skillData.selfFireExplosionLifeMultiplier
				skillData.FireBonusMax = output.TotemLife * skillData.selfFireExplosionLifeMultiplier
			else
				skillData.FireBonusMin = output.Life * skillData.selfFireExplosionLifeMultiplier
				skillData.FireBonusMax = output.Life * skillData.selfFireExplosionLifeMultiplier
			end
		end
	end,
#mods

#skill BoneOffering
#flags spell duration
#baseMod skill("buffMinions", true)
#baseMod skill("buffNotPlayer", true)
#mods

#skill Clarity
#flags spell aura area
#baseMod skill("radius", 36)
#mods

#skill VaalClarity
#flags spell aura area duration vaal
#baseMod skill("radius", 36)
#mods

#skill ColdSnap
#flags spell area cold
#baseMod skill("radius", 16)
#mods

#skill VaalColdSnap
#flags spell area duration cold vaal
#mods

#skill Conductivity
#flags spell curse area duration lightning
#baseMod skill("debuff", true)
#baseMod skill("radius", 22)
#mods

#skill Contagion
#flags spell area duration chaos
#baseMod skill("debuff", true)
#baseMod skill("radius", 20)
#mods

#skill ConversionTrap
#flags spell duration trap
#mods

#skill Convocation
#flags spell duration
#baseMod skill("buffMinions", true)
#baseMod skill("buffNotPlayer", true)
#mods

#skill DarkPact
#flags spell area
--baseMod skill("radius", 24)
	parts = {
		{
			name = "Cast on Player",
		},
		{
			name = "Cast on Skeleton",
		},
	},
	setupFunc = function(actor, output)
		local life
		if actor.mainSkill.skillPart == 1 then
			if actor.mainSkill.skillFlags.totem then
				life = output.TotemLife
			else
				life = output.Life
			end
		else
			life = actor.mainSkill.skillData.skeletonLife or 0
		end
		local add = life * actor.mainSkill.skillData.lifeDealtAsChaos / 100
		actor.mainSkill.skillData.ChaosMin = actor.mainSkill.skillData.ChaosMin + add
		actor.mainSkill.skillData.ChaosMax = actor.mainSkill.skillData.ChaosMax + add
	end,
#mods

#skill Despair
#flags spell curse area duration
#baseMod skill("debuff", true)
#baseMod skill("radius", 22)
#mods

#skill Discharge
#flags spell area lightning cold fire
#baseMod skill("radius", 30)
#mods

#skill Discipline
#flags spell aura area
#baseMod skill("radius", 36)
#mods

#skill VaalDiscipline
#flags spell aura area duration vaal
#baseMod skill("radius", 36)
#mods

#skill ElementalWeakness
#flags spell curse area duration
#baseMod skill("debuff", true)
#baseMod skill("radius", 22)
#mods

#skill Enfeeble
#flags spell curse area duration
#baseMod skill("debuff", true)
#baseMod skill("radius", 22)
#mods

#skill EssenceDrain
#flags spell projectile duration chaos
#baseMod skill("debuff", true)
#baseMod skill("showAverage", true)
#mods

#skill FireNovaMine
#flags spell mine area duration fire
#baseMod skill("radius", 30)
#mods

#skill Fireball
#flags spell projectile fire
	parts = {
		{
			name = "Projectile",
			area = false,
		},
		{
			name = "Explosion",
			area = true,
		},
	},
#baseMod skill("radius", 9)
#mods

#skill VaalFireballSpiralNova
#flags spell projectile fire vaal
	parts = {
		{
			name = "Projectile",
			area = false,
		},
		{
			name = "Explosion",
			area = true,
		},
	},
#mods

#skill Firestorm
#flags spell area duration fire
#baseMod skill("radius", 25)
#baseMod skill("radiusSecondary", 10)
#mods

#skill FlameDash
#flags spell area duration movement fire
#baseMod skill("dotIsArea", true)
#mods

#skill FlameWhip
#flags spell area fire
#baseMod skill("radius", 30)
#mods

#skill Flameblast
#flags spell area fire
	parts = {
		{
			name = "1 Stage",
		},
		{
			name = "10 Stages",
		},
	},
#setMod base_skill_show_average_damage_instead_of_dps==nil
#baseMod mod("Multiplier:FlameblastStage", "BASE", 9, 0, 0, { type = "SkillPart", skillPart = 2 })
#baseMod skill("dpsMultiplier", 0.1, { type = "SkillPart", skillPart = 2 })
#mods

#skill VaalFlameblast
#flags spell area fire vaal
#baseMod mod("Multiplier:FlameblastStage", "BASE", 9)
#mods

#skill Flammability
#flags spell curse area duration fire
#baseMod skill("debuff", true)
#baseMod skill("radius", 22)
#mods

#skill FleshOffering
#flags spell duration
#baseMod skill("buffMinions", true)
#baseMod skill("buffNotPlayer", true)
#mods

#skill FreezingPulse
#flags spell projectile cold
	setupFunc = function(env, output)
		env.modDB:NewMod("Damage", "MORE", -100, "Skill:FreezingPulse", { type = "DistanceRamp", ramp = {{0,0},{60*output.ProjectileSpeedMod,1}} })
		env.modDB:NewMod("EnemyFreezeChance", "BASE", 25, "Skill:FreezingPulse", { type = "DistanceRamp", ramp = {{0,1},{15*output.ProjectileSpeedMod,0}} })
	end,
#mods

#skill FrostBomb
#flags spell area duration cold
#baseMod skill("debuffSecondary", true)
#global Debuff
#mods

#skill FrostWall
#flags spell duration cold
#mods

#skill Frostbite
#flags spell curse area duration cold
#baseMod skill("debuff", true)
#baseMod skill("radius", 22)
#mods

#skill FrostBolt
#flags spell projectile cold
#mods

#skill GlacialCascade
#flags spell area cold
#baseMod skill("radius", 12)
#mods

#skill HeraldOfThunder
#flags cast duration lightning
#baseMod skill("radius", 32)
#mods

#skill IceNova
#flags spell area cold
#baseMod skill("radius", 30)
#mods

#skill VaalIceNova
#flags spell area cold vaal
#mods

#skill IceSpear
#flags spell projectile cold
	parts = {
		{
			name = "First Form",
		},
		{
			name = "Second Form",
		},
	},
#baseMod mod("PierceChance", "BASE", 100, 0, 0, { type = "SkillPart", skillPart = 1 })
#mods

#skill Incinerate
#flags spell projectile fire
	parts = {
		{
			name = "Base damage",
		},
		{
			name = "Fully charged",
		},
	},
#baseMod mod("Damage", "MORE", 150, 0, bit.bor(KeywordFlag.Hit, KeywordFlag.Ailment), { type = "SkillPart", skillPart = 2 })
#mods

#skill ClusterBurst
#flags attack projectile area
	parts = {
		{
			name = "Projectile",
			area = false,
		},
		{
			name = "Explosions",
			area = true,
		},
	},
#baseMod skill("radius", 14)
#mods

#skill LightningTendrilsChannelled
#flags spell area lightning
#baseMod skill("radius", 22)
#mods

#skill LightningTrap
#flags spell trap projectile lightning
#mods

#skill VaalLightningTrap
#flags spell trap projectile duration lightning vaal
#mods

#skill LightningWarp
#flags spell area duration movement lightning
#baseMod skill("radius", 16)
#mods

#skill VaalLightningWarpInstant
#flags spell area duration lightning vaal
#mods

#skill MagmaOrb
#flags spell projectile area chaining fire
#mods

#skill OrbOfStorms
#flags spell chaining duration lightning
#mods

#skill PowerSiphon
#flags attack projectile
#mods

#skill VaalPowerSiphon
#flags attack projectile vaal
#mods

#skill Purity
#flags spell aura area
#baseMod skill("radius", 36)
#mods

#skill LightningResistAura
#flags spell aura area
#baseMod skill("radius", 36)
#mods

#skill RaiseSpectre
#flags spell minion spectre duration
#setMod accuracy_rating==mod("MinionModifier", "LIST", { mod = mod("Accuracy", "BASE", nil) })
	minionList = {
	},
#mods

#skill RaiseZombie
#flags spell minion
	minionList = {
		"RaisedZombie",
	},
#mods

#skill RighteousFire
#flags spell area fire
	setupFunc = function(actor, output)
		if actor.mainSkill.skillFlags.totem then
			actor.mainSkill.skillData.FireDot = output.TotemLife * 0.4
		else
			actor.mainSkill.skillData.FireDot = (output.Life + output.EnergyShield) * 0.4
		end
	end,
#baseMod skill("dotIsArea", true)
#baseMod skill("radius", 18)
#mods

#skill VaalRighteousFire
#flags spell area fire vaal
	setupFunc = function(actor, output)
		actor.mainSkill.skillData.FireMin = output.EnergyShield + output.Life - 1
		actor.mainSkill.skillData.FireMax = output.EnergyShield + output.Life - 1
	end,
#mods

#skill FireBeam
#flags spell duration fire
	parts = {
		{
			name = "1 Stage",
		},
		{
			name = "4 Stages",
		},
		{
			name = "8 Stages",
		},
	},
#setMod fire_beam_enemy_fire_resistance_%_per_stack==mod("FireResist", "BASE", {val}, 0, 0, { type = "GlobalEffect", effectType = "Debuff" })
#baseMod skill("stackCount", 1, { type = "SkillPart", skillPart = 1 })
#baseMod skill("stackCount", 4, { type = "SkillPart", skillPart = 2 })
#baseMod skill("stackCount", 8, { type = "SkillPart", skillPart = 3 })
#baseMod mod("Damage", "MORE", 180, 0, 0, { type = "SkillPart", skillPart = 2 })
#baseMod mod("Damage", "MORE", 420, 0, 0, { type = "SkillPart", skillPart = 3 })
#mods

#skill ShockNova
#flags spell area lightning
	parts = {
		{
			name = "Ring",
		},
		{
			name = "Nova",
		},
	},
#baseMod skill("radius", 26)
#mods

#skill Spark
#flags spell projectile duration lightning
#mods

#skill VaalSparkSpiralNova
#flags spell projectile duration lightning vaal
#mods

#skill SpiritOffering
#flags spell duration
#baseMod skill("buffMinions", true)
#baseMod skill("buffNotPlayer", true)
#mods

#skill StormBurst
#flags spell projectile area
	parts = {
		{
			name = "Projectile",
			area = false,
		},
		{
			name = "Explosion",
			area = true,
		},
	},
#setMod base_skill_show_average_damage_instead_of_dps==nil
#mods

#skill StormCall
#flags spell area duration lightning
#setMod base_skill_show_average_damage_instead_of_dps==nil
#baseMod flag("durationDelaysDamage", true)
#baseMod skill("radius", 20)
#mods

#skill VaalStormCall
#flags spell area duration lightning vaal
#mods

#skill SummonChaosGolem
#flags spell minion golem chaos
#baseMod skill("allowTotemBuff", true)
#baseMod flag("Condition:HaveChaosGolem", { type = "GlobalEffect", effectType = "Buff" })
	minionList = {
		"SummonedChaosGolem",
	},
#mods

#skill SummonLightningGolem
#flags spell minion golem lightning
#baseMod skill("allowTotemBuff", true)
#baseMod flag("Condition:HaveLightningGolem", { type = "GlobalEffect", effectType = "Buff" })
	minionList = {
		"SummonedLightningGolem",
	},
#mods

#skill SummonRagingSpirit
#flags spell minion duration fire
	minionList = {
		"SummonedRagingSpirit",
	},
#mods

#skill SummonSkeletons
#flags spell minion duration
#setMod damage_+%==mod("MinionModifier", "LIST", { mod = mod("Damage", "INC", 1) })
	minionList = {
		"RaisedSkeleton",
		"RaisedSkeletonCaster",
	},
#mods

#skill VaalSummonSkeletons
#flags spell minion duration
#setMod damage_+%==mod("MinionModifier", "LIST", { mod = mod("Damage", "INC", 1) })
	minionList = {
		"RaisedSkeleton",
		"RaisedSkeletonCaster",
		"RaisedSkeletonArcher",
	},
#mods

#skill TempestShield
#flags spell duration chaining lightning
#setMod shield_block_%==mod("BlockChance", "BASE", {val}, 0, 0, { type = "GlobalEffect", effectType = "Buff" })
#mods

#skill FrostBoltNova
#flags spell area duration cold
#baseMod skill("dotIsArea", true)
#mods

#skill Wither
#flags spell area duration chaos
	parts = {
		{
			name = "1 Stack",
		},
		{
			name = "5 Stacks",
		},
		{
			name = "10 Stacks",
		},
		{
			name = "15 Stacks",
		},
	},
#global Debuff
#baseMod skill("debuff", true)
#baseMod skill("stackCount", 1, { type = "SkillPart", skillPart = 1 })
#baseMod skill("stackCount", 5, { type = "SkillPart", skillPart = 2 })
#baseMod skill("stackCount", 10, { type = "SkillPart", skillPart = 3 })
#baseMod skill("stackCount", 15, { type = "SkillPart", skillPart = 4 })
#setMod base_skill_effect_duration==nil
#setMod base_secondary_skill_effect_duration==skill("duration", {val});div=1000
#mods

#skill Wrath
#flags spell aura area lightning
#baseMod skill("radius", 36)
#mods